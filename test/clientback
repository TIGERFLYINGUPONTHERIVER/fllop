#include <sys/types.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <cstring>
#include <unistd.h>
#include <netinet/in.h>
#include <iostream>

using namespace std;

#define SERVER_PORT     8821
#define MAX_MSG_SIZE    256
#define SERVER_IP       "127.0.0.1"

int main()
{
    int cli_sock = socket( AF_INET, SOCK_STREAM, 0 );

    struct sockaddr_in ser_addr;
    memset( &ser_addr, '\0', sizeof( ser_addr ) );
    ser_addr.sin_family = AF_INET;
    ser_addr.sin_port = htons( SERVER_PORT );
    ser_addr.sin_addr.s_addr = inet_addr(SERVER_IP);

    if( connect(cli_sock, (struct sockaddr *)&ser_addr, sizeof(ser_addr)) < 0 )
    {
        cout << "connect error." << endl;
        close( cli_sock );
        exit(-1);
    }

    char sendbuf[MAX_MSG_SIZE];
    char recvbuf[MAX_MSG_SIZE];

    string s;
    while(1)
    {
        cin >> s;
        if( s == "exit" )   break;
        send( cli_sock, sendbuf, strlen(sendbuf), 0 );

        recv( cli_sock, recvbuf, sizeof(recvbuf), 0 );
        cout << recvbuf;

        memset( sendbuf, 0, sizeof(sendbuf) );
        memset( recvbuf, 0, sizeof(recvbuf) );
    }

    close( cli_sock );

    return 0;
}
